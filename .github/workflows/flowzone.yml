name: Flowzone

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - "main"
      - "master"
  pull_request_target:
    types: [opened, synchronize, closed]
    branches:
      - "main"
      - "master"

jobs:
  flowzone:
    name: Flowzone
    uses: product-os/flowzone/.github/workflows/flowzone.yml@master
    # prevent duplicate workflow executions for pull_request and pull_request_target
    if: |
      (
        github.event.pull_request.head.repo.full_name == github.repository &&
        github.event_name == 'pull_request'
      ) || (
        github.event.pull_request.head.repo.full_name != github.repository &&
        github.event_name == 'pull_request_target'
      )
    secrets: inherit
    with:
      docker_images: |
        ghcr.io/balena-os/balena-yocto-scripts
      bake_targets: yocto-build-env,balena-push-env

  # depends on Flowzone having already published the helper images
  yocto-build:
    name: Yocto-build
    uses: ./.github/workflows/yocto-build.yml
    needs: flowzone
    secrets: inherit
    with:
      # runs-on: '[ "ubuntu-latest" ]'
      environment: staging
      device-repo: balena-os/balena-generic
      device-repo-ref: master
      yocto-scripts-ref: ${{ github.event.pull_request.head.sha || github.sha }}
      machine: generic-amd64
      sign-image: false
      os-dev: false

  # depends on the build job having already published the helper images
  # In here now for testing - we actually want this to be used on device repos on the creation of a new version tag (or PR merge)
  yocto-deploy:
    name: Deploy
    uses: ./.github/workflows/yocto-deploy.yml
    needs: yocto-build
    secrets: inherit
    with:
      # runs-on: '[ "ubuntu-latest" ]'
      environment: staging
      device-repo: balena-os/balena-generic
      yocto-scripts-ref: ${{ github.event.pull_request.head.sha || github.sha }}
      machine: generic-amd64
      deploy-s3: true
      deploy-hostapp: true
      deploy-ami: true
      sign-image: false
      os-dev: false
      deploy-esr: false
      device_slug: ${{ needs.yocto-build.outputs.device_slug }}
      os_version: ${{ needs.yocto-build.outputs.os_version }}
      is_private: ${{ needs.yocto-build.outputs.is_private }}